  # This is a basic workflow to help you get started with Actions
  
  name: CI
  
  # Controls when the workflow will run
  on:
    # Triggers the workflow on push or pull request events but only for the "main" branch
    push:
      branches: [ "main" ]
    pull_request:
      branches: [ "main" ]
  
    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:
  
  # A workflow run is made up of one or more jobs that can run sequentially or in parallel
  jobs:
    # This workflow contains a single job called "build"
    build:
      # The type of runner that the job will run on
      runs-on: ubuntu-latest
  
      # Steps represent a sequence of tasks that will be executed as part of the job
      steps:
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        - uses: actions/checkout@v4
  
        # Runs a single command using the runners shell
        - name: Run a one-line script
          run: |
            echo Hello, world!
            sudo apt-get update
            sudo apt install -y \
            build-essential openssl pkg-config libssl-dev libncurses-dev minizip libelf-dev flex bison libc6-dev libidn11-dev rsync bc lz4 debootstrap git curl \
            gcc-aarch64-linux-gnu dpkg-dev dpkg qemu-user-static \
            debhelper-compat libdw-dev libssl-dev

            #sudo apt-get install -y \
            #build-essential openssl pkg-config libssl-dev libncurses-dev minizip libelf-dev flex bison libc6-dev libidn11-dev rsync bc lz4 debootstrap git \
            #gcc-aarch64-linux-gnu dpkg-dev dpkg qemu-user-static \
            #debhelper-compat libdw-dev libssl-dev wget curl
  
        # Runs a set of commands using the runners shell
        - name: Run a multi-line script
          run: |
            echo Add other actions to build,
            echo test, and deploy your project.
            uname -a
            pwd
            sudo apt install neofetch wget --no-install-recommends -y
            neofetch
            cp config-postmarketos-qcom-msm8953.aarch64 .config
            ls -la
            pwd


            git clone --depth=1 -b 6.15/main https://github.com/msm8953-mainline/linux.git kernel
            wget https://gitlab.postmarketos.org/postmarketOS/pmaports/-/raw/master/device/community/linux-postmarketos-qcom-msm8953/config-postmarketos-qcom-msm8953.aarch64
            pwd
            ls -la
            cp ${{ github.workspace }}/config-postmarketos-qcom-msm8953.aarch64 kernel/.config
            cd kernel
            make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- CC=aarch64-linux-gnu-gcc -j$(nproc)
            make -j$(nproc) ARCH=arm64 KBUILD_DEBARCH=arm64 KDEB_CHANGELOG_DIST=mobile CROSS_COMPILE=aarch64-linux-gnu- CC=aarch64-linux-gnu-gcc bindeb-pkg
            pwd
            ls -la

            # sudo apt install build-essential openssl pkg-config libssl-dev libncurses-dev minizip libelf-dev flex bison libc6-dev libidn11-dev rsync bc lz4 debootstrap git curl -y
            # sudo apt install gcc-aarch64-linux-gnu dpkg-dev dpkg qemu-user-static -y
            # sudo apt install debhelper-compat libdw-dev libssl-dev -y



            
        - name: Upload .config file
          uses: actions/upload-artifact@v4
          with:
            name: kernel-config
            path: |
              ${{ github.workspace }}/config-postmarketos-qcom-msm8953.aarch64
              ${{ github.workspace }}/*.deb
              *.deb




            # ${{ github.workspace }}/.config
